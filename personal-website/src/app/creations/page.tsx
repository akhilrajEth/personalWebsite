"use client"
import React, { useState } from "react";
import { FaXTwitter } from "react-icons/fa6";

export default function Creations() {
  const tags = [
    "Stablecoins",
    "DeFi",
    "AI"
  ];
  const [activeTab, setActiveTab] = useState<'Active' | 'Archived'>('Active');
  const [selectedTag, setSelectedTag] = useState<string | null>(null);

  // Example creations with tags, users, revenue, and image
  const activeCreations = [
    {
      name: 'Jarvis',
      description: 'Jarvis is an autonomous AI agent that earns yield on your crypto assets. Yield is generated by market-making on Uniswap V3 & V4 pools. Currently in alpha-testing on Base & Unichain.',
      tags: ["AI","DeFi","Stablecoins"],
      users: '0',
      revenue: '0',
      image: "/stealth.png",
      timespan: '2025 - Present',
      twitter: 'https://x.com/0xAkhil_'
    },
  ];
  const archivedCreations = [
    {
      name: 'MealX',
      description: 'The Genesis block of my Web3 journey. MealX was a mobile app enabling students at the University of Virginia to buy and sell a campus commodity known as the "meal exchange". Just before launch, it was shutdown by UVA in breach of the dining contract.',
      tags: [],
      users: '51 waitlisters',
      revenue: '$0',
      image: "/MealX.png",
      timespan: '2022',
    },  
    {
      name: 'Pare',
      description: 'Stablecoin banking, payments, and rewards for small-restaurants. Charged 0% transaction fees with monthly subscription instead, improved cashflow, increased user-retention by 16% on average with stablecoin rewards distributed to users.',
      tags: ["Stablecoins"],
      users: '2 restaurants',
      revenue: '$400',
      image: "/Pare.png",
      timespan: '2023',
      grants: '$17,000 from i.Lab Incubator'
    },
    {
      name: 'Splurge Finance',
      description: 'Splurge provided automation for Arbitrum DEX traders beyond limit orders or TWAP(Time Weighted Average Price). It allowed traders to capture sudden movements in price(e.g. an asset trends upwards and suddenly dumps 20%, Splurge can capture this price action via buy/sell).',
      tags: ["DeFi"],
      users: '325',
      revenue: '$21 in fees',
      image: "/SplurgeSS.png",
      timespan: '2023',
      twitter: 'https://x.com/splurgefinance'
    },
  ];

  // Filter creations by selected tag (twitter and grants are optional)
  const filterCreations = (creations: Array<{
    name: string;
    description: string;
    tags: string[];
    users: string;
    revenue: string;
    image: string;
    timespan: string;
    twitter?: string;
    grants?: string;
  }>) => {
    if (!selectedTag) return creations;
    return creations.filter(creation => creation.tags.includes(selectedTag));
  };

  return (
    <div className="pl-4 pr-4 md:pl-12 md:pr-0 pt-32 max-w-5xl pb-16">
      <h1 className="text-5xl font-extrabold text-left mb-2 tracking-tight">Creations</h1>
      <p className="text-left text-neutral-600 mb-8 text-lg md:text-xl">
        <span className="block font-medium">I build things to solve problems</span>
      </p>
      <div className="flex flex-wrap gap-3 mb-8">
        {tags.map((tag) => (
          <button
            key={tag}
            className={`px-4 py-2 rounded-full border font-medium shadow transition
              ${selectedTag === tag ? 'bg-teal-600 text-white border-teal-600' : 'bg-white/70 border-neutral-200 text-neutral-800 hover:bg-teal-50'}`}
            type="button"
            onClick={() => setSelectedTag(selectedTag === tag ? null : tag)}
          >
            {tag}
          </button>
        ))}
      </div>
      {/* Tabs for Creation status */}
      <div className="flex space-x-4 mb-8">
        <button
          className={`px-5 py-2 rounded-t-lg font-semibold border-b-2 transition-colors duration-200 ${activeTab === 'Active' ? 'border-teal-600 text-teal-700 bg-white' : 'border-transparent text-neutral-500 bg-transparent hover:text-teal-700'}`}
          onClick={() => setActiveTab('Active')}
        >
          Active
        </button>
        <button
          className={`px-5 py-2 rounded-t-lg font-semibold border-b-2 transition-colors duration-200 ${activeTab === 'Archived' ? 'border-teal-600 text-teal-700 bg-white' : 'border-transparent text-neutral-500 bg-transparent hover:text-teal-700'}`}
          onClick={() => setActiveTab('Archived')}
        >
          Archived
        </button>
      </div>
      {/* Creation lists */}
      <div>
        {activeTab === 'Active' ? (
          <div className="space-y-6">
            {filterCreations(activeCreations).map((creation) => (
              <div key={creation.name} className="bg-white/80 rounded-lg p-5 shadow border border-neutral-100 flex flex-col md:flex-row md:items-center gap-6 relative">
                <img src={creation.image} alt={creation.name} className="w-40 h-32 object-cover rounded-lg border border-neutral-200" />
                <div className="flex-1">
                  <span className="block text-xs text-neutral-400 mb-1">{creation.timespan}</span>
                  <h2 className="text-xl font-bold mb-1">{creation.name}</h2>
                  <p className="text-neutral-700 mb-2">{creation.description}</p>
                  <div className="flex flex-wrap gap-2 mt-2 mb-2">
                    {creation.tags.map((tag) => (
                      <span key={tag} className="px-3 py-1 rounded-full bg-teal-100 text-teal-700 text-xs font-semibold">
                        {tag}
                      </span>
                    ))}
                  </div>
                  <div className="flex gap-6 mt-2 text-sm text-neutral-600">
                    <span><span className="font-semibold text-neutral-900">Users:</span> {creation.users}</span>
                    <span><span className="font-semibold text-neutral-900">Revenue:</span> {creation.revenue}</span>
                  </div>
                  {creation.grants && (
                    <div className="mt-1 text-xs text-teal-700 font-semibold">Grant: {creation.grants}</div>
                  )}
                </div>
                {creation.twitter && (
                  <a
                    href={creation.twitter}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="absolute bottom-3 right-3 text-xl text-neutral-400 hover:text-teal-600 transition"
                    aria-label="Project Twitter/X"
                  >
                    <FaXTwitter />
                  </a>
                )}
              </div>
            ))}
            {filterCreations(activeCreations).length === 0 && (
              <div className="text-neutral-400 italic">No creations found for this category.</div>
            )}
          </div>
        ) : (
          <div className="space-y-6">
            {filterCreations(archivedCreations).map((creation) => (
              <div key={creation.name} className="bg-neutral-100 rounded-lg p-5 shadow border border-neutral-200 flex flex-col md:flex-row md:items-center gap-6 relative">
                <img src={creation.image} alt={creation.name} className="w-40 h-32 object-cover rounded-lg border border-neutral-200" />
                <div className="flex-1">
                  <span className="block text-xs text-neutral-400 mb-1">{creation.timespan}</span>
                  <h2 className="text-xl font-bold mb-1">{creation.name}</h2>
                  <p className="text-neutral-600 mb-2">{creation.description}</p>
                  <div className="flex flex-wrap gap-2 mt-2 mb-2">
                    {creation.tags.map((tag) => (
                      <span key={tag} className="px-3 py-1 rounded-full bg-teal-100 text-teal-700 text-xs font-semibold">
                        {tag}
                      </span>
                    ))}
                  </div>
                  <div className="flex gap-6 mt-2 text-sm text-neutral-600">
                    <span><span className="font-semibold text-neutral-900">Users:</span> {creation.users}</span>
                    <span><span className="font-semibold text-neutral-900">Revenue:</span> {creation.revenue}</span>
                  </div>
                  {creation.grants && (
                    <div className="mt-1 text-xs text-teal-700 font-semibold">Grant: {creation.grants}</div>
                  )}
                </div>
                {creation.twitter && (
                  <a
                    href={creation.twitter}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="absolute bottom-3 right-3 text-xl text-neutral-400 hover:text-teal-600 transition"
                    aria-label="Project Twitter/X"
                  >
                    <FaXTwitter />
                  </a>
                )}
              </div>
            ))}
            {filterCreations(archivedCreations).length === 0 && (
              <div className="text-neutral-400 italic">No creations found for this category.</div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}